{"ast":null,"code":"var _jsxFileName = \"D:\\\\university\\\\8\\\\IE\\\\CA\\\\1-2\\\\MizDooni\\\\CA6\\\\Frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('jwtToken');\n  console.log(\"tokennnn : \", token);\n  if (token) {\n    config.headers['Authorization'] = 'Bearer ' + token;\n  }\n  config.withCredentials = true;\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","axios","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","interceptors","request","use","config","token","localStorage","getItem","console","log","headers","withCredentials","error","Promise","reject","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/university/8/IE/CA/1-2/MizDooni/CA6/Frontend/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport axios from 'axios';\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        console.log(\"tokennnn : \", token);\r\n        if (token) {\r\n            config.headers['Authorization'] = 'Bearer ' + token;\r\n        }\r\n        config.withCredentials = true;\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,sCAAsC;AAC7C,OAAO,wCAAwC;AAC/C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1B,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAGjEN,KAAK,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAC9CC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEJ,KAAK,CAAC;EACjC,IAAIA,KAAK,EAAE;IACPD,MAAM,CAACM,OAAO,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGL,KAAK;EACvD;EACAD,MAAM,CAACO,eAAe,GAAG,IAAI;EAC7B,OAAOP,MAAM;AACjB,CAAC,EACDQ,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AACDf,IAAI,CAACkB,MAAM,eACTnB,OAAA,CAACL,KAAK,CAACyB,UAAU;EAAAC,QAAA,eACfrB,OAAA,CAACH,GAAG;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}